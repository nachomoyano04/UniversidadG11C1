/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controladoras.AlumnoData;
import controladoras.InscripcionData;
import controladoras.MateriaData;
import entidades.Alumno;
import entidades.Inscripcion;
import entidades.Materia;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nacho
 */
public class VistaInscripcionesVol2 extends javax.swing.JInternalFrame {
        
        private DefaultTableModel tableAlumnos;
        private DefaultTableModel tableMaterias;
        private HashMap<String,Integer>alumnos = new HashMap();
        private HashMap<String,Integer>materias = new HashMap();
        private AlumnoData ad = new AlumnoData();        
        private MateriaData md = new MateriaData();


    /**
     * Creates new form VistaInscripcionesVol2
     */
    public VistaInscripcionesVol2() {
        initComponents();
        tableAlumnos = (DefaultTableModel) jTableAlumnos.getModel();
        tableMaterias = (DefaultTableModel) jTableMaterias.getModel();
        for (Alumno alum : ad.listarAlumnos()) {
            alumnos.put(alum.getNombre(), alum.getId_alumno());
            tableAlumnos.insertRow(tableAlumnos.getRowCount(), new Object[]{alum.getNombre(),alum.getApellido(),alum.getDni(),alum.getFechaNacimiento()});
        }
        for (Materia mate : md.listarMaterias()) {
            materias.put(mate.getNombre(), mate.getId_materia());
            tableMaterias.insertRow(tableMaterias.getRowCount(), new Object[]{mate.getNombre(),mate.getAnio()});
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlumnos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMaterias = new javax.swing.JTable();
        jbtnInscribir = new javax.swing.JButton();
        jbtnDesinscribir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("FORMULARIO DE INSCRIPCION");

        jTableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "DNI", "FechaNacimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAlumnos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableAlumnos);
        if (jTableAlumnos.getColumnModel().getColumnCount() > 0) {
            jTableAlumnos.getColumnModel().getColumn(0).setResizable(false);
            jTableAlumnos.getColumnModel().getColumn(1).setResizable(false);
            jTableAlumnos.getColumnModel().getColumn(2).setResizable(false);
            jTableAlumnos.getColumnModel().getColumn(3).setResizable(false);
        }

        jTableMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "AÃ±o"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableMaterias);
        if (jTableMaterias.getColumnModel().getColumnCount() > 0) {
            jTableMaterias.getColumnModel().getColumn(0).setResizable(false);
            jTableMaterias.getColumnModel().getColumn(1).setResizable(false);
        }

        jbtnInscribir.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jbtnInscribir.setText("Inscribir");
        jbtnInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInscribirActionPerformed(evt);
            }
        });

        jbtnDesinscribir.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jbtnDesinscribir.setText("Desinscribir");
        jbtnDesinscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDesinscribirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(jbtnInscribir)
                .addGap(68, 68, 68)
                .addComponent(jbtnDesinscribir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(147, 147, 147))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnDesinscribir)
                    .addComponent(jbtnInscribir))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnDesinscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDesinscribirActionPerformed
        // TODO add your handling code here:
        InscripcionData indata = new InscripcionData();
        String nombreAlumno = jTableAlumnos.getValueAt(jTableAlumnos.getSelectedRow(), 0).toString();
        String nombreMateria = jTableMaterias.getValueAt(jTableMaterias.getSelectedRow(), 0).toString();
        indata.borrarInscripcionMateriaAlumno(alumnos.get(nombreAlumno), materias.get(nombreMateria));
    }//GEN-LAST:event_jbtnDesinscribirActionPerformed

    private void jbtnInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInscribirActionPerformed
        // TODO add your handling code here:
        String nombreAlumno = jTableAlumnos.getValueAt(jTableAlumnos.getSelectedRow(), 0).toString();
        String nombreMateria = jTableMaterias.getValueAt(jTableMaterias.getSelectedRow(), 0).toString();
        Alumno alum = ad.buscarAlumnoPorId(alumnos.get(nombreAlumno));
        Materia mate = md.buscarMateria(materias.get(nombreMateria));
        Inscripcion insc = new Inscripcion(alum, mate, 0);
        InscripcionData indata = new InscripcionData();
        indata.inscribir(insc);
    }//GEN-LAST:event_jbtnInscribirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAlumnos;
    private javax.swing.JTable jTableMaterias;
    private javax.swing.JButton jbtnDesinscribir;
    private javax.swing.JButton jbtnInscribir;
    // End of variables declaration//GEN-END:variables
}
